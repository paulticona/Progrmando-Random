body{
    background: grey;
}




/*estilos de los cointenedores*/

.flex-container, 
.flex-container1, 
.flex-container2, 
.flex-container3,
.flex-container4,
.flex-container5,
.flex-container6,
.flex-container7{
    display: flex;
    border-radius: 10px;
    background: #506080;  
}
.flex-container{
    height: 100px;
    width: 200px;
}
.flex-container1{
    display: inline-flex;
    flex-wrap: wrap-reverse;
    flex-direction: row-reverse;
    /*shorthand
    flex-flow: row-reverse wrap-reverse;
    */
}
.flex-container2{
    background-color: rgb(106, 161, 51);
   flex-flow: wrap;
   justify-content: center; /*aqui ulizamos 
                            la aliniacion de items*/
}
.flex-container3{
    background-color: rgb(85, 85, 241);
    height: 300px;
    align-items: center;
}
.flex-container4{
    flex-flow: wrap; /*para controlar todo el flujo de los items*/
    background-color: rgb(105, 105, 27);
    justify-content: center;
    height: 300px;
    align-items: center;/*sirve tambien para itmes individuales*/
    align-content: flex-end;/*muenve a todos los items en 
                            conjunto */
    /*No se nesecita tener elmentos para mover el contenido puede
    ser solo texto*/
}


.flex-container5{
    display: flex;
    height: 200px;
    background-color: teal;
    justify-content: center;
    align-items: center;
    font-size: 50px;
}
.flex-container5::before,
.flex-container5::after{
    content: "";
    display: block;
    height: 5px;
    width: 200px;
    background: linear-gradient(to left, red,teal);
    margin-right: .5em;
    margin-left: 0;
    /*el flex hace que los elementos sean totalmente flexibles
    con un comportamiento de adaptace a cualquier pantalla
    sin afectar a las configuraciones de boxmodel*/
    flex: 1;
}
.flex-container5::after{
    background: linear-gradient(to right, red,teal);
    margin-right: 0;
    margin-left: .5em;
}

/*flex-grow y flex-shrink*/
.flex-container6{
    display: flex;
    font-size: 3em;
    background: darkviolet;
}
.main{
    background: green;
    flex-grow: 1;/*fle-grow indica el factor de crecimiento
                    el navegador divide el espacio enre la 
                    cantidad total de factores de crecimiento
                    sumandole siempre a susdimenciones
                    predeterminada*/
    border-radius: 10px;
}

.aside{
    
    background: red;
    display: flex;
    flex-direction: column;
}
.item{
    width: 100px;
    text-align: center;
    border-radius: 10px;
    background: pink;
            /* los items toman espacios iguales segun
                    el tama√±o de la caja variable*/
}
.item:nth-child(even){
    background: slategray;
    flex-shrink: 1;/*tiene la misma logica que el flex-grow
                    pero con la diferencia que lo hace
                    al contrario restando la divicion
                    del espacio sobrante*/
}
/*fle-grow end*/

.box{
    margin: auto;
}
.box1{
    border: 2px solid black;
    padding: .5em 1em;
    margin: 2rem;
}
.box2{
    border: 2px solid black;
    width: 100px;
    font-size: 20px;
    margin: 1rem;
}
.box, .box1{
    width: 80px;
    height: 80px;
    text-align: center;
    background-color: lightgreen;
    border-radius: 10px;
}







.image-info img{
    height: 400px;
    margin-top: 10px;
    border-radius: 10px;
}
.sub-title{
    color: brown;
    font-size: 30px;
}
.flex-container7{
    display: flex;
    height: 2em;
}
.item1{
    display: flex;
    background: palegreen;
    border-radius: 10px;
    /*flex-grow: 1;
    flex-basis: 0; /*pra que las cjas de los items
                    midan lo mismo apesar del cambio*/
    flex: 1;
    text-align: center;
    justify-content: center;
    align-items: center;
}
.item1:nth-child(even){
    background: palevioletred;
    
}
